// This file has been autogenerated from parsing an Objective-C header file added in Xcode.

using System;

using MonoTouch.Foundation;
using MonoTouch.UIKit;

namespace ListenAndRepeat
{
	public partial class WordListController : UITableViewController
	{
		public WordListController(IntPtr handle) : base (handle)
		{
			mWordsModel = new WordsModel();
		}
		
		public override void DidReceiveMemoryWarning ()
		{
			// Releases the view if it doesn't have a superview.
			base.DidReceiveMemoryWarning ();
			
			// Release any cached data, images, etc that aren't in use.
		}

		public override void ViewWillAppear (bool animated)
		{
			base.ViewWillAppear (animated);

			var tableSource = new TableSource(mWordsModel);
			TableView.Source = tableSource;

			AddButton.Clicked += HandleAddButtonClicked;
		}

		private void HandleAddButtonClicked(object sender, EventArgs e)
		{
			var addWord = Storyboard.InstantiateViewController("AddWordController") as AddWordController;
			addWord.TheWordsModel = mWordsModel;

			NavigationController.PushViewController(addWord, true);
		}

		public override void ViewDidAppear (bool animated)
		{
			base.ViewDidAppear(animated);
		}
		
		public override void ViewWillDisappear (bool animated)
		{
			base.ViewWillDisappear(animated);
		}
		
		public override void ViewDidDisappear (bool animated)
		{
			base.ViewDidDisappear(animated);
		}

		[Obsolete]
		public override bool ShouldAutorotateToInterfaceOrientation (UIInterfaceOrientation toInterfaceOrientation)
		{
			// Return true for supported orientations
			return (toInterfaceOrientation != UIInterfaceOrientation.PortraitUpsideDown);
		}

		WordsModel mWordsModel;
	}

	public class TableSource : UITableViewSource 
	{
		string mCellIdentifier = "WordCell";
		WordsModel mWordsModel;
		
		public TableSource(WordsModel theModel)
		{
			mWordsModel = theModel;
		}
		
		public override int RowsInSection(UITableView tableview, int section)
		{
			return mWordsModel.WordList.Count;
		}

		public override void AccessoryButtonTapped(UITableView tableView, NSIndexPath indexPath)
		{
			new UIAlertView("DetailDisclosureButton Touched", mWordsModel.WordList[indexPath.Row], null, "OK", null).Show();
		}
		
		public override UITableViewCell GetCell(UITableView tableView, MonoTouch.Foundation.NSIndexPath indexPath)
		{
			UITableViewCell cell = tableView.DequeueReusableCell(mCellIdentifier);

			cell.TextLabel.Text = mWordsModel.WordList[indexPath.Row];

			return cell;
		}
		
		/*
		public override void RowSelected (UITableView tableView, NSIndexPath indexPath)
		{
			// new UIAlertView("Row Selected", tableItems[indexPath.Row], null, "OK", null).Show();
			tableView.DeselectRow(indexPath, true); // iOS convention is to remove the highlight
		}
		*/
	}
}
